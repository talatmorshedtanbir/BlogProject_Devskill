@using Microsoft.AspNetCore.Identity
@inject SignInManager<BlogProject_Devskill.Membership.Entities.ApplicationUser> SignInManager
@inject UserManager<BlogProject_Devskill.Membership.Entities.ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var id = User.Identity.Name;
        var userId = UserManager.GetUserId(User);
        var userFullName = UserManager.FindByNameAsync(User.Identity.Name).Result.FullName;

        <li class="nav-item">
            <a class="nav-link text-dark userTitle" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa fa-user" aria-hidden="true"></i> Hello @userFullName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Accounts" asp-action="Login"><i class="fa fa-user" aria-hidden="true"></i> Admin Login</a>
        </li>
    }
</ul>
